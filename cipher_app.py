import streamlit as st
from PIL import Image
import requests
from io import BytesIO

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title("üîê –ö—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π —Ç—Ä–µ–Ω–∞–∂–µ—Ä: –®–∏—Ñ—Ä –¶–µ–∑–∞—Ä—è")
st.markdown("### –ò–∑—É—á–∏ –æ—Å–Ω–æ–≤—ã —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–≥–æ —à–∏—Ñ—Ä–∞ –¶–µ–∑–∞—Ä—è")

# –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–ø—Ä–∏–º–µ—Ä—ã URL, –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–≤–æ–∏)
def load_image_from_url(url):
    try:
        response = requests.get(url)
        img = Image.open(BytesIO(response.content))
        return img
    except:
        return None

# –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç - –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏)
try:
    caesar_img = load_image_from_url("https://upload.wikimedia.org/wikipedia/commons/thumb/2/2b/Caesar3.svg/800px-Caesar3.svg.png")
    cipher_wheel = load_image_from_url("https://upload.wikimedia.org/wikipedia/commons/thumb/7/7a/CipherDisk2000.jpg/800px-CipherDisk2000.jpg")
    ancient_cipher = load_image_from_url("https://upload.wikimedia.org/wikipedia/commons/thumb/4/4d/Enigma_rotors_with_alphabet_rings.jpg/800px-Enigma_rotors_with_alphabet_rings.jpg")
except:
    caesar_img = None
    cipher_wheel = None
    ancient_cipher = None

# –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä—É—Å—Å–∫–∏–π –∞–ª—Ñ–∞–≤–∏—Ç
RUSSIAN_ALPHABET = '–∞–±–≤–≥–¥–µ–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è'

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —à–∏—Ñ—Ä–∞ –¶–µ–∑–∞—Ä—è
def caesar_cipher(text, shift, mode='encrypt'):
    result = ""
    
    if mode == 'decrypt':
        shift = -shift
    
    for char in text:
        char_lower = char.lower()
        if char_lower in RUSSIAN_ALPHABET:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä
            is_upper = char.isupper()
            
            # –ù–∞—Ö–æ–¥–∏–º –ø–æ–∑–∏—Ü–∏—é –≤ –∞–ª—Ñ–∞–≤–∏—Ç–µ
            char_pos = RUSSIAN_ALPHABET.index(char_lower)
            
            # –í—ã—á–∏—Å–ª—è–µ–º –Ω–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é
            new_pos = (char_pos + shift) % len(RUSSIAN_ALPHABET)
            
            # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—É—é –±—É–∫–≤—É
            new_char = RUSSIAN_ALPHABET[new_pos]
            if is_upper:
                new_char = new_char.upper()
            
            result += new_char
        else:
            # –ï—Å–ª–∏ —Å–∏–º–≤–æ–ª –Ω–µ —Ä—É—Å—Å–∫–∞—è –±—É–∫–≤–∞, –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å
            result += char
    return result

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
st.sidebar.title("–û —à–∏—Ñ—Ä–µ –¶–µ–∑–∞—Ä—è")
st.sidebar.info("""
**–®–∏—Ñ—Ä –¶–µ–∑–∞—Ä—è** ‚Äî –æ–¥–∏–Ω –∏–∑ –¥—Ä–µ–≤–Ω–µ–π—à–∏—Ö –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —à–∏—Ñ—Ä–æ–≤, 
–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–∏–π—Å—è –Æ–ª–∏–µ–º –¶–µ–∑–∞—Ä–µ–º –¥–ª—è –∑–∞—â–∏—Ç—ã –ø–µ—Ä–µ–ø–∏—Å–∫–∏.

**–ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã:** –ö–∞–∂–¥–∞—è –±—É–∫–≤–∞ –≤ —Ç–µ–∫—Å—Ç–µ –∑–∞–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ –¥—Ä—É–≥—É—é –±—É–∫–≤—É, 
–Ω–∞—Ö–æ–¥—è—â—É—é—Å—è –Ω–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –ø–æ–∑–∏—Ü–∏–π (–∫–ª—é—á) –¥–∞–ª—å—à–µ –≤ –∞–ª—Ñ–∞–≤–∏—Ç–µ. 
–ê–ª—Ñ–∞–≤–∏—Ç –∑–∞—Ü–∏–∫–ª–µ–Ω: –ø–æ—Å–ª–µ ¬´—è¬ª –∏–¥—ë—Ç ¬´–∞¬ª.
""")

# –ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —à–∏—Ñ—Ä–∞ –¶–µ–∑–∞—Ä—è, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
if caesar_img:
    st.sidebar.image(caesar_img, caption="–°—Ö–µ–º–∞ —à–∏—Ñ—Ä–∞ –¶–µ–∑–∞—Ä—è", use_column_width=True)
else:
    st.sidebar.warning("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ö–µ–º—ã —à–∏—Ñ—Ä–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ")

# –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
st.header("–®–∏—Ñ—Ä–∞—Ç–æ—Ä/–î–µ—à–∏—Ñ—Ä–∞—Ç–æ—Ä –¶–µ–∑–∞—Ä—è")

# –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
col1, col2 = st.columns(2)

with col1:
    user_text = st.text_area("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç (—Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫):", "–ü–†–ò–í–ï–¢ –ú–ò–†", height=100)

with col2:
    shift = st.slider("–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–≥ —Å–¥–≤–∏–≥–∞ (–∫–ª—é—á):", min_value=1, max_value=32, value=3)
    operation = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é:", ("–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å", "–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å"))

# –ö–Ω–æ–ø–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
if st.button("–í—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", type="primary"):
    if user_text:
        mode = 'encrypt' if operation == "–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å" else 'decrypt'
        processed_text = caesar_cipher(user_text, shift, mode)
        
        st.success("–†–µ–∑—É–ª—å—Ç–∞—Ç:")
        st.code(processed_text)
        
        # –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        with st.expander("–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è"):
            st.write(f"**–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç:** {user_text}")
            st.write(f"**–ö–ª—é—á (—Å–¥–≤–∏–≥):** {shift}")
            st.write(f"**–†–µ–∂–∏–º:** {operation}")
            st.write(f"**–ê–ª—Ñ–∞–≤–∏—Ç:** {RUSSIAN_ALPHABET}")
    else:
        st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç.")

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —à–∏—Ñ—Ä–µ
st.markdown("---")
st.header("–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞")

col1, col2 = st.columns(2)

with col1:
    st.subheader("–ü—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ —à–∏—Ñ—Ä–∞")
    st.write("""
    –®–∏—Ñ—Ä –¶–µ–∑–∞—Ä—è –Ω–∞–∑–≤–∞–Ω –≤ —á–µ—Å—Ç—å —Ä–∏–º—Å–∫–æ–≥–æ –∏–º–ø–µ—Ä–∞—Ç–æ—Ä–∞ –ì–∞—è –Æ–ª–∏—è –¶–µ–∑–∞—Ä—è,
    –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –µ–≥–æ –¥–ª—è —Å–µ–∫—Ä–µ—Ç–Ω–æ–π –ø–µ—Ä–µ–ø–∏—Å–∫–∏ —Å–æ —Å–≤–æ–∏–º–∏ –≥–µ–Ω–µ—Ä–∞–ª–∞–º–∏.
    
    –≠—Ç–æ –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –ø—Ä–æ—Å—Ç—ã—Ö –∏ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —à–∏—Ñ—Ä–æ–≤, —è–≤–ª—è—é—â–∏–π—Å—è —Ä–∞–∑–Ω–æ–≤–∏–¥–Ω–æ—Å—Ç—å—é
    —à–∏—Ñ—Ä–∞ –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏, –≥–¥–µ –∫–∞–∂–¥–∞—è –±—É–∫–≤–∞ –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º —Ç–µ–∫—Å—Ç–µ –∑–∞–º–µ–Ω—è–µ—Ç—Å—è –±—É–∫–≤–æ–π,
    –Ω–∞—Ö–æ–¥—è—â–µ–π—Å—è –Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–æ–º –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–º —á–∏—Å–ª–µ –ø–æ–∑–∏—Ü–∏–π –ª–µ–≤–µ–µ –∏–ª–∏ –ø—Ä–∞–≤–µ–µ –Ω–µ—ë –≤ –∞–ª—Ñ–∞–≤–∏—Ç–µ.
    """)

with col2:
    if cipher_wheel:
        st.image(cipher_wheel, caption="–®–∏—Ñ—Ä–æ–≤–∞–ª—å–Ω—ã–π –¥–∏—Å–∫ - –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —à–∏—Ñ—Ä–∞ –¶–µ–∑–∞—Ä—è", use_column_width=True)
    else:
        st.info("–®–∏—Ñ—Ä–æ–≤–∞–ª—å–Ω—ã–π –¥–∏—Å–∫ - –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —à–∏—Ñ—Ä–∞ –¶–µ–∑–∞—Ä—è")

# –†–∞–∑–¥–µ–ª –∫—Ä–∏–ø—Ç–æ–∞–Ω–∞–ª–∏–∑–∞
st.markdown("---")
st.header("–ö—Ä–∏–ø—Ç–æ–∞–Ω–∞–ª–∏–∑ —à–∏—Ñ—Ä–∞ –¶–µ–∑–∞—Ä—è")

st.write("""
–ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫—É—é –∑–Ω–∞—á–∏–º–æ—Å—Ç—å, —à–∏—Ñ—Ä –¶–µ–∑–∞—Ä—è –Ω–µ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç 
—Å–µ—Ä—å–µ–∑–Ω–æ–π –∑–∞—â–∏—Ç—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –º–µ—Ä–∫–∞–º. –ï–≥–æ –º–æ–∂–Ω–æ –ª–µ–≥–∫–æ –≤–∑–ª–æ–º–∞—Ç—å 
—Å –ø–æ–º–æ—â—å—é —Å–ª–µ–¥—É—é—â–∏—Ö –º–µ—Ç–æ–¥–æ–≤:
""")

st.markdown("""
1. **–ú–µ—Ç–æ–¥ –≥—Ä—É–±–æ–π —Å–∏–ª—ã (brute force)** - –ø–µ—Ä–µ–±–æ—Ä –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∫–ª—é—á–µ–π (–≤—Å–µ–≥–æ 32 –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞)
2. **–ß–∞—Å—Ç–æ—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑** - –∞–Ω–∞–ª–∏–∑ —á–∞—Å—Ç–æ—Ç—ã –ø–æ—è–≤–ª–µ–Ω–∏—è –±—É–∫–≤ –≤ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ
3. **–ü–æ–∏—Å–∫ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–ª–æ–≤** - –ø–æ–∏—Å–∫ –≤ —Ç–µ–∫—Å—Ç–µ —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞—é—â–∏—Ö—Å—è —Å–ª–æ–≤ –∏ —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–π
""")

if ancient_cipher:
    st.image(ancient_cipher, caption="–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —à–∏—Ñ—Ä–æ–≤–∞–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞", use_column_width=True)

# –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–º–µ—Ä –≤–∑–ª–æ–º–∞
st.subheader("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–∑–ª–æ–º–∞—Ç—å —à–∏—Ñ—Ä:")
sample_encrypted = caesar_cipher("—Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å", 7, 'encrypt')
st.code(f"–ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: {sample_encrypted}")

if st.button("–ü–æ–∫–∞–∑–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏"):
    st.write("–í–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã (–ø–µ—Ä–µ–±–æ—Ä –∫–ª—é—á–µ–π):")
    
    for test_shift in range(1, 33):
        decrypted = caesar_cipher(sample_encrypted, test_shift, 'decrypt')
        st.write(f"–ö–ª—é—á {test_shift}: {decrypted}")

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ
st.markdown("---")
st.caption("–®–∫–æ–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ. –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ Python.")
